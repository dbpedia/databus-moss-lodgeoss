spring.config.import=file:env.properties
server.port=${PORT:2000}
# Ensure application is run in Vaadin 14/npm mode
logging.level.org.atmosphere = warn

virt.url=${DB_URL:http://localhost:2002}
virt.usr=${DB_USR:admin}
virt.psw=${DB_PSW:admin}

file.vol=${VOLUME:config}
file.configPath=${CONFIG_PATH:./config/index-manager-config.yml}
uri.base=${BASE_URI:http://localhost:2000}
uri.gstore=${GSTORE_URI:http://localhost:2001}
uri.lookup=${LOOKUP_URI:http://localhost:2003}
uri.context=${CONTEXT_URI:https://raw.githubusercontent.com/dbpedia/databus-moss/dev/devenv/context.jsonld}

# databus base URL for setting up MOSS instances for different databuses
databus.base=https://databus.dbpedia.org
# endpoint for databus file metadata
databus.file.endpoint=https://databus.dbpedia.org/repo/sparql
# endpoint for mod data
databus.mods.endpoint=https://moss-mods.tools.dbpedia.org/sparql

debug.fetch.enabled=true

# spring.security.oauth2.client:
#   provider:
#     auth:
#       issuer-uri: ${ISSUER_URI}
#   registration:
#     auth:
#       authorization-grant-type: authorization_code
#       client-id: ${AUTH_CLIENT_ID}
#       client-secret: ${AUTH_CLIENT_SECRET}
#       redirect-uri: 'http://localhost:2000/login'
#       scope: openid

# security.ignored=/**
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration

# security.basic.enabled=false
# spring.security.oauth2.client.registration.keycloak.client-secret=${AUTH_CLIENT_SECRET}
# spring.security.oauth2.client.provider.keycloak.issuer-uri=${ISSUER_URI}

# spring.security.oauth2.client.registration.keycloak.client-id=${MOSS_CLIENT_ID}
# spring.security.oauth2.client.registration.keycloak.client-id=login-app
# spring.security.oauth2.client.registration.keycloak.authorization-grant-type
# spring.security.oauth2.client.registration.keycloak.scope=openid
# spring.security.oauth2.resourceserver.jwt.issuer-uri=${TOKEN_URI}




# spring.security.oauth2.client.registration.client_id=${MOSS_CLIENT_ID}
# spring.security.oauth2.client.registration.client_secret=${MOSS_CLIENT_SECRET}
# spring.security.oauth.client.registration.authorization-grant-type=client_credentials
# spring.security.oauth.client.registration.redirect-uri=http://localhost:2000/login
# spring.security.oauth.client.registration.scope

# spring.security.oauth2.registration.client.issuer-uri=http://localhost:8180/auth/realms/moss
# spring.security.oauth2.client.provider.keycloak.issuer-uri=${ISSUER_URI}

keycloak:
  auth-server-url: http://localhost:8080/auth
  realm: moss
  resource: moss-api
  public-client: true
  principal-attribute: preferred_username
  security-constraints:
    – authRoles:
        – user
      securityCollections:
        – patterns:
            – “/*”

# spring:
#   security:
#     oauth2:
#       client:
#         registration:
#           keycloak:
#             provider=moss
#             client-id: moss-api
#             client-name: moss-api
#             client-secret: ${MOSS_CLIENT_SECRET}
#             authorization-grant-type: authorization_code
#             redirect-uri: http://localhost:2000/login/oauth2/code/moss-api
#             scope: openId
#         provider:
#           keycloak:
#             issuer-uri: http://localhost:8180/realms/moss
#             authorization_endpoint: ${issuer}/protocol/openid-connect/auth
#             token_endpoint: ${issuer}/protocol/openid-connect/token
#             user-name-attribute:preferred_username
#       resourceserver:
#         jwt:
#           issuer-uri: http://localhost:8180/realms/moss
#           jwk-set-uri: http://localhost:8180/realms/moss/oauth2/default












            # token-uri: https://localhost:8180/realms/moss/protocol/openid-connect
            # token-uri: http://localhost:8180/oauth/token
            # authorization-uri: http:localhost:8180/oauth/authorize
            # user-info-uri: http:localhost:8180/oauth/userinfo

            # .clientId("moss-api")
            # .clientName("moss-api")
            # .userNameAttributeName("email")
            # .clientSecret("MxM6XmpVn8hY3XdK73TgOdIEV8MGXP2w")
            # .redirectUri("http://localhost:2000/login/oauth2/code/moss-api")
            # .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)
            # .issuerUri("http://localhost:8180/realms/moss")
            # .authorizationUri("http://localhost:8180/realms/moss/protocol/openid-connect/auth")
            # .tokenUri("http://localhost:8180/realms/moss/protocol/openid-connect/token")
            # .userInfoUri("http://localhost:8180/realms/moss/protocol/openid-connect/userinfo")
            # .scope("openid", "profile")
            # .jwkSetUri("http://localhost:8180/sso-auth-server/.well-known/jwks.json")
            # .build();